// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#pragma once

#include "frc/commands/Subsystem.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "ctre/Phoenix.h"
#include "rev/ColorSensorV3.h"
#include "rev/ColorMatch.h"
#include <frc/smartdashboard/smartdashboard.h>
#include <frc/DriverStation.h>
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 *
 *
 * @author ExampleAuthor
 */
class WarpDriveInverter: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<ctre::phoenix::motorcontrol::can::WPI_VictorSPX> wheelMotor;
	std::shared_ptr<rev::ColorSensorV3> colorSensor;
	std::shared_ptr<rev::ColorMatch> colorMatcher;
 
	static constexpr frc::Color kBlueTarget = frc::Color(0.11, 0.41, 0.45); //will eventually change to be configured in shuffleboard config
 	static constexpr frc::Color kGreenTarget = frc::Color(0.16, 0.57, 0.26);
  	static constexpr frc::Color kRedTarget = frc::Color(0.51, 0.35, 0.13);
  	static constexpr frc::Color kYellowTarget = frc::Color(0.31, 0.55, 0.12);
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
WarpDriveInverter();
	void InitDefaultCommand() override;
	void Periodic() override;
	void ColorMatcherInit();


};

